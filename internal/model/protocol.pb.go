// Protocol Buffers 定义文件
// 描述服务器与客户端之间的通信协议
// 包含基础请求响应协议、登录协议等核心通信协议

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.31.1
// source: protocol.proto

package model

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 协议类型枚举
// 定义所有支持的协议类型，用于标识具体的请求和响应类型
type ProtocolType int32

const (
	ProtocolType_UNKNOWN ProtocolType = 0 // 未知协议类型，默认值
	// 登录相关协议
	ProtocolType_LOGIN_REQ  ProtocolType = 1 // 登录请求协议
	ProtocolType_LOGIN_RESP ProtocolType = 2 // 登录响应协议
)

// Enum value maps for ProtocolType.
var (
	ProtocolType_name = map[int32]string{
		0: "UNKNOWN",
		1: "LOGIN_REQ",
		2: "LOGIN_RESP",
	}
	ProtocolType_value = map[string]int32{
		"UNKNOWN":    0,
		"LOGIN_REQ":  1,
		"LOGIN_RESP": 2,
	}
)

func (x ProtocolType) Enum() *ProtocolType {
	p := new(ProtocolType)
	*p = x
	return p
}

func (x ProtocolType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProtocolType) Descriptor() protoreflect.EnumDescriptor {
	return file_protocol_proto_enumTypes[0].Descriptor()
}

func (ProtocolType) Type() protoreflect.EnumType {
	return &file_protocol_proto_enumTypes[0]
}

func (x ProtocolType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProtocolType.Descriptor instead.
func (ProtocolType) EnumDescriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{0}
}

// 响应状态码枚举
// 定义服务器响应的标准状态码，用于统一处理响应结果
type RESP_CODE int32

const (
	RESP_CODE_ERROR      RESP_CODE = 0 // 操作失败，表示请求处理过程中发生错误
	RESP_CODE_SUCCESS    RESP_CODE = 1 // 操作成功，表示请求已成功处理
	RESP_CODE_APP_UPDATE RESP_CODE = 3 // 客服端版本过低，需要升级app版本号
)

// Enum value maps for RESP_CODE.
var (
	RESP_CODE_name = map[int32]string{
		0: "ERROR",
		1: "SUCCESS",
		3: "APP_UPDATE",
	}
	RESP_CODE_value = map[string]int32{
		"ERROR":      0,
		"SUCCESS":    1,
		"APP_UPDATE": 3,
	}
)

func (x RESP_CODE) Enum() *RESP_CODE {
	p := new(RESP_CODE)
	*p = x
	return p
}

func (x RESP_CODE) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RESP_CODE) Descriptor() protoreflect.EnumDescriptor {
	return file_protocol_proto_enumTypes[1].Descriptor()
}

func (RESP_CODE) Type() protoreflect.EnumType {
	return &file_protocol_proto_enumTypes[1]
}

func (x RESP_CODE) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RESP_CODE.Descriptor instead.
func (RESP_CODE) EnumDescriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{1}
}

// 基础请求协议
// 所有客户端请求的通用包装协议，包含协议类型和具体数据
type BaseRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          ProtocolType           `protobuf:"varint,1,opt,name=type,proto3,enum=model.ProtocolType" json:"type,omitempty"` // 协议类型，用于标识具体的请求类型
	Data          []byte                 `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`                          // 具体请求数据（序列化后的具体协议）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BaseRequest) Reset() {
	*x = BaseRequest{}
	mi := &file_protocol_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseRequest) ProtoMessage() {}

func (x *BaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseRequest.ProtoReflect.Descriptor instead.
func (*BaseRequest) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{0}
}

func (x *BaseRequest) GetType() ProtocolType {
	if x != nil {
		return x.Type
	}
	return ProtocolType_UNKNOWN
}

func (x *BaseRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

// 基础响应协议
// 所有服务器响应的通用包装协议，包含结果状态和具体数据
type BaseResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          ProtocolType           `protobuf:"varint,1,opt,name=type,proto3,enum=model.ProtocolType" json:"type,omitempty"`  // 协议类型，用于标识具体的响应类型
	Result        RESP_CODE              `protobuf:"varint,2,opt,name=result,proto3,enum=model.RESP_CODE" json:"result,omitempty"` // 操作结果：SUCCESS(1)表示成功，ERROR(0)表示失败
	Msg           string                 `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`                             // 结果消息，用于描述操作结果或错误信息
	Data          []byte                 `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`                           // 具体响应数据（序列化后的具体协议）
	Timestamp     int64                  `protobuf:"varint,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`                // 时间戳，记录响应生成的时间
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BaseResponse) Reset() {
	*x = BaseResponse{}
	mi := &file_protocol_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BaseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseResponse) ProtoMessage() {}

func (x *BaseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseResponse.ProtoReflect.Descriptor instead.
func (*BaseResponse) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{1}
}

func (x *BaseResponse) GetType() ProtocolType {
	if x != nil {
		return x.Type
	}
	return ProtocolType_UNKNOWN
}

func (x *BaseResponse) GetResult() RESP_CODE {
	if x != nil {
		return x.Result
	}
	return RESP_CODE_ERROR
}

func (x *BaseResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *BaseResponse) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *BaseResponse) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

// 登录请求协议
// 客户端发送的登录请求，包含微信小程序登录凭证
type LoginRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	JsCode        string                 `protobuf:"bytes,1,opt,name=js_code,json=jsCode,proto3" json:"js_code,omitempty"` // 微信小程序登录凭证，用于获取用户openid和session_key
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LoginRequest) Reset() {
	*x = LoginRequest{}
	mi := &file_protocol_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginRequest) ProtoMessage() {}

func (x *LoginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginRequest.ProtoReflect.Descriptor instead.
func (*LoginRequest) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{2}
}

func (x *LoginRequest) GetJsCode() string {
	if x != nil {
		return x.JsCode
	}
	return ""
}

// 登录响应中的实验室信息
// 专门用于登录响应，包含完整的实验室信息和角色信息
type LoginLabInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Lab           *Lab                   `protobuf:"bytes,1,opt,name=lab,proto3" json:"lab,omitempty"`                                   // 实验室基本信息
	Roles         []*Role                `protobuf:"bytes,2,rep,name=roles,proto3" json:"roles,omitempty"`                               // 实验室中定义的完整角色信息列表
	UserRoleId    string                 `protobuf:"bytes,3,opt,name=user_role_id,json=userRoleId,proto3" json:"user_role_id,omitempty"` // 当前用户在实验室中的角色ID
	UserRole      *Role                  `protobuf:"bytes,4,opt,name=user_role,json=userRole,proto3" json:"user_role,omitempty"`         // 当前用户在实验室中的完整角色信息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LoginLabInfo) Reset() {
	*x = LoginLabInfo{}
	mi := &file_protocol_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoginLabInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginLabInfo) ProtoMessage() {}

func (x *LoginLabInfo) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginLabInfo.ProtoReflect.Descriptor instead.
func (*LoginLabInfo) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{3}
}

func (x *LoginLabInfo) GetLab() *Lab {
	if x != nil {
		return x.Lab
	}
	return nil
}

func (x *LoginLabInfo) GetRoles() []*Role {
	if x != nil {
		return x.Roles
	}
	return nil
}

func (x *LoginLabInfo) GetUserRoleId() string {
	if x != nil {
		return x.UserRoleId
	}
	return ""
}

func (x *LoginLabInfo) GetUserRole() *Role {
	if x != nil {
		return x.UserRole
	}
	return nil
}

// 登录响应协议
// 服务器返回的登录响应，包含用户信息和选中的实验室信息
type LoginResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	User          *User                  `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`       // 用户信息（引用user.proto中的User）
	LabInfo       *LoginLabInfo          `protobuf:"bytes,2,opt,name=labInfo,proto3" json:"labInfo,omitempty"` // 用户当前选中的实验室信息（包含完整角色信息）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LoginResponse) Reset() {
	*x = LoginResponse{}
	mi := &file_protocol_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoginResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginResponse) ProtoMessage() {}

func (x *LoginResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginResponse.ProtoReflect.Descriptor instead.
func (*LoginResponse) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{4}
}

func (x *LoginResponse) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *LoginResponse) GetLabInfo() *LoginLabInfo {
	if x != nil {
		return x.LabInfo
	}
	return nil
}

var File_protocol_proto protoreflect.FileDescriptor

const file_protocol_proto_rawDesc = "" +
	"\n" +
	"\x0eprotocol.proto\x12\x05model\x1a\n" +
	"user.proto\x1a\tlab.proto\x1a\n" +
	"role.proto\"J\n" +
	"\vBaseRequest\x12'\n" +
	"\x04type\x18\x01 \x01(\x0e2\x13.model.ProtocolTypeR\x04type\x12\x12\n" +
	"\x04data\x18\x02 \x01(\fR\x04data\"\xa5\x01\n" +
	"\fBaseResponse\x12'\n" +
	"\x04type\x18\x01 \x01(\x0e2\x13.model.ProtocolTypeR\x04type\x12(\n" +
	"\x06result\x18\x02 \x01(\x0e2\x10.model.RESP_CODER\x06result\x12\x10\n" +
	"\x03msg\x18\x03 \x01(\tR\x03msg\x12\x12\n" +
	"\x04data\x18\x04 \x01(\fR\x04data\x12\x1c\n" +
	"\ttimestamp\x18\x05 \x01(\x03R\ttimestamp\"'\n" +
	"\fLoginRequest\x12\x17\n" +
	"\ajs_code\x18\x01 \x01(\tR\x06jsCode\"\x97\x01\n" +
	"\fLoginLabInfo\x12\x1a\n" +
	"\x03lab\x18\x01 \x01(\v2\b.lab.LabR\x03lab\x12 \n" +
	"\x05roles\x18\x02 \x03(\v2\n" +
	".role.RoleR\x05roles\x12 \n" +
	"\fuser_role_id\x18\x03 \x01(\tR\n" +
	"userRoleId\x12'\n" +
	"\tuser_role\x18\x04 \x01(\v2\n" +
	".role.RoleR\buserRole\"^\n" +
	"\rLoginResponse\x12\x1e\n" +
	"\x04user\x18\x01 \x01(\v2\n" +
	".user.UserR\x04user\x12-\n" +
	"\alabInfo\x18\x02 \x01(\v2\x13.model.LoginLabInfoR\alabInfo*:\n" +
	"\fProtocolType\x12\v\n" +
	"\aUNKNOWN\x10\x00\x12\r\n" +
	"\tLOGIN_REQ\x10\x01\x12\x0e\n" +
	"\n" +
	"LOGIN_RESP\x10\x02*3\n" +
	"\tRESP_CODE\x12\t\n" +
	"\x05ERROR\x10\x00\x12\v\n" +
	"\aSUCCESS\x10\x01\x12\x0e\n" +
	"\n" +
	"APP_UPDATE\x10\x03B\x1fZ\x1dhappyAssistant/internal/modelb\x06proto3"

var (
	file_protocol_proto_rawDescOnce sync.Once
	file_protocol_proto_rawDescData []byte
)

func file_protocol_proto_rawDescGZIP() []byte {
	file_protocol_proto_rawDescOnce.Do(func() {
		file_protocol_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_protocol_proto_rawDesc), len(file_protocol_proto_rawDesc)))
	})
	return file_protocol_proto_rawDescData
}

var file_protocol_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_protocol_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_protocol_proto_goTypes = []any{
	(ProtocolType)(0),     // 0: model.ProtocolType
	(RESP_CODE)(0),        // 1: model.RESP_CODE
	(*BaseRequest)(nil),   // 2: model.BaseRequest
	(*BaseResponse)(nil),  // 3: model.BaseResponse
	(*LoginRequest)(nil),  // 4: model.LoginRequest
	(*LoginLabInfo)(nil),  // 5: model.LoginLabInfo
	(*LoginResponse)(nil), // 6: model.LoginResponse
	(*Lab)(nil),           // 7: lab.Lab
	(*Role)(nil),          // 8: role.Role
	(*User)(nil),          // 9: user.User
}
var file_protocol_proto_depIdxs = []int32{
	0, // 0: model.BaseRequest.type:type_name -> model.ProtocolType
	0, // 1: model.BaseResponse.type:type_name -> model.ProtocolType
	1, // 2: model.BaseResponse.result:type_name -> model.RESP_CODE
	7, // 3: model.LoginLabInfo.lab:type_name -> lab.Lab
	8, // 4: model.LoginLabInfo.roles:type_name -> role.Role
	8, // 5: model.LoginLabInfo.user_role:type_name -> role.Role
	9, // 6: model.LoginResponse.user:type_name -> user.User
	5, // 7: model.LoginResponse.labInfo:type_name -> model.LoginLabInfo
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_protocol_proto_init() }
func file_protocol_proto_init() {
	if File_protocol_proto != nil {
		return
	}
	file_user_proto_init()
	file_lab_proto_init()
	file_role_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_protocol_proto_rawDesc), len(file_protocol_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_protocol_proto_goTypes,
		DependencyIndexes: file_protocol_proto_depIdxs,
		EnumInfos:         file_protocol_proto_enumTypes,
		MessageInfos:      file_protocol_proto_msgTypes,
	}.Build()
	File_protocol_proto = out.File
	file_protocol_proto_goTypes = nil
	file_protocol_proto_depIdxs = nil
}
