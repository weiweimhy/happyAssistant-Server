// Protocol Buffers 定义文件
// 实验室信息相关的数据结构定义
// 包含实验室的基本信息、创建者、所有者、角色管理等字段

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.31.1
// source: lab.proto

package model

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 实验室信息
// 定义实验室的基本信息结构，包含实验室ID、名称、描述、权限管理等
type Lab struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: json:"id,omitempty" bson:"_id"
	Id            string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" bson:"_id"`                                                                                                                  // 实验室唯一标识符
	Name          string            `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                                                                                                              // 实验室名称
	Desc          string            `protobuf:"bytes,3,opt,name=desc,proto3" json:"desc,omitempty"`                                                                                                              // 实验室描述信息
	CreateId      string            `protobuf:"bytes,4,opt,name=create_id,json=createId,proto3" json:"create_id,omitempty"`                                                                                      // 实验室创建者ID
	OwnerId       string            `protobuf:"bytes,5,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`                                                                                         // 实验室所有者ID
	CreateAt      int64             `protobuf:"varint,6,opt,name=create_at,json=createAt,proto3" json:"create_at,omitempty"`                                                                                     // 实验室创建时间戳（Unix时间戳）
	UpdateAt      int64             `protobuf:"varint,7,opt,name=update_at,json=updateAt,proto3" json:"update_at,omitempty"`                                                                                     // 实验室信息最后更新时间戳（Unix时间戳）
	RoleIds       []string          `protobuf:"bytes,8,rep,name=role_ids,json=roleIds,proto3" json:"role_ids,omitempty"`                                                                                         // 实验室中定义的角色ID列表
	UserRoleMap   map[string]string `protobuf:"bytes,9,rep,name=user_role_map,json=userRoleMap,proto3" json:"user_role_map,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // 用户角色映射表，key为用户ID，value为角色ID
	Roles         []*Role           `protobuf:"bytes,10,rep,name=roles,proto3" json:"roles,omitempty"`                                                                                                           // 实验室中定义的完整角色信息列表
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Lab) Reset() {
	*x = Lab{}
	mi := &file_lab_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Lab) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Lab) ProtoMessage() {}

func (x *Lab) ProtoReflect() protoreflect.Message {
	mi := &file_lab_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Lab.ProtoReflect.Descriptor instead.
func (*Lab) Descriptor() ([]byte, []int) {
	return file_lab_proto_rawDescGZIP(), []int{0}
}

func (x *Lab) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Lab) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Lab) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *Lab) GetCreateId() string {
	if x != nil {
		return x.CreateId
	}
	return ""
}

func (x *Lab) GetOwnerId() string {
	if x != nil {
		return x.OwnerId
	}
	return ""
}

func (x *Lab) GetCreateAt() int64 {
	if x != nil {
		return x.CreateAt
	}
	return 0
}

func (x *Lab) GetUpdateAt() int64 {
	if x != nil {
		return x.UpdateAt
	}
	return 0
}

func (x *Lab) GetRoleIds() []string {
	if x != nil {
		return x.RoleIds
	}
	return nil
}

func (x *Lab) GetUserRoleMap() map[string]string {
	if x != nil {
		return x.UserRoleMap
	}
	return nil
}

func (x *Lab) GetRoles() []*Role {
	if x != nil {
		return x.Roles
	}
	return nil
}

var File_lab_proto protoreflect.FileDescriptor

const file_lab_proto_rawDesc = "" +
	"\n" +
	"\tlab.proto\x12\x03lab\x1a\n" +
	"role.proto\"\xeb\x02\n" +
	"\x03Lab\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x12\n" +
	"\x04desc\x18\x03 \x01(\tR\x04desc\x12\x1b\n" +
	"\tcreate_id\x18\x04 \x01(\tR\bcreateId\x12\x19\n" +
	"\bowner_id\x18\x05 \x01(\tR\aownerId\x12\x1b\n" +
	"\tcreate_at\x18\x06 \x01(\x03R\bcreateAt\x12\x1b\n" +
	"\tupdate_at\x18\a \x01(\x03R\bupdateAt\x12\x19\n" +
	"\brole_ids\x18\b \x03(\tR\aroleIds\x12=\n" +
	"\ruser_role_map\x18\t \x03(\v2\x19.lab.Lab.UserRoleMapEntryR\vuserRoleMap\x12 \n" +
	"\x05roles\x18\n" +
	" \x03(\v2\n" +
	".role.RoleR\x05roles\x1a>\n" +
	"\x10UserRoleMapEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01B Z\x1eServerFramework/internal/modelb\x06proto3"

var (
	file_lab_proto_rawDescOnce sync.Once
	file_lab_proto_rawDescData []byte
)

func file_lab_proto_rawDescGZIP() []byte {
	file_lab_proto_rawDescOnce.Do(func() {
		file_lab_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_lab_proto_rawDesc), len(file_lab_proto_rawDesc)))
	})
	return file_lab_proto_rawDescData
}

var file_lab_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_lab_proto_goTypes = []any{
	(*Lab)(nil),  // 0: lab.Lab
	nil,          // 1: lab.Lab.UserRoleMapEntry
	(*Role)(nil), // 2: role.Role
}
var file_lab_proto_depIdxs = []int32{
	1, // 0: lab.Lab.user_role_map:type_name -> lab.Lab.UserRoleMapEntry
	2, // 1: lab.Lab.roles:type_name -> role.Role
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_lab_proto_init() }
func file_lab_proto_init() {
	if File_lab_proto != nil {
		return
	}
	file_role_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_lab_proto_rawDesc), len(file_lab_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_lab_proto_goTypes,
		DependencyIndexes: file_lab_proto_depIdxs,
		MessageInfos:      file_lab_proto_msgTypes,
	}.Build()
	File_lab_proto = out.File
	file_lab_proto_goTypes = nil
	file_lab_proto_depIdxs = nil
}
